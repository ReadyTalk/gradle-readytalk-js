plugins {
  id 'groovy'
  id 'jacoco'
  id 'maven'
  id 'maven-publish'
  id 'com.jfrog.artifactory' version "3.0.1"
  id 'com.jfrog.bintray' version "0.6"
  id 'com.github.kt3k.coveralls' version "2.0.1"
}

ext {
  bintrayUser = System.env.'BINTRAY_USER'
  bintrayKey = System.env.'BINTRAY_KEY'
  isMaster = System.env.'TRAVIS_BRANCH' == "master"
  compatibilityVersion = 1.7
}

sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

defaultTasks 'build'

repositories {
  jcenter()
}

dependencies {
  compile gradleApi()
  compile 'com.moowork.gradle:gradle-node-plugin:0.7'
  compile 'com.moowork.gradle:gradle-grunt-plugin:0.6'

  testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
    exclude module: 'groovy-all'
  }
}

tasks.withType(Test) {
  testLogging {
    exceptionFormat "full"
  }

  if (project.hasProperty('stdOut')) {
    showStandardStreams = true
  }
}

task sourcesJar( type: Jar ) {
  classifier 'sources'
  from sourceSets.main.allSource
}

task groovydocJar( type: Jar ) {
  classifier 'javadoc'
  from groovydoc
}

artifacts {
  archives sourcesJar
  archives groovydocJar
}

jacocoTestReport {
  reports {
    xml.enabled = true // coveralls plugin depends on xml format report
    html.enabled = true
  }
}

check.dependsOn 'jacocoTestReport'

tasks.coveralls {
  dependsOn 'check'
  onlyIf { isMaster }
}

task ci {
  dependsOn 'build', 'coveralls', 'artifactoryPublish'
}

publishing {
  publications {
    mavenJava( MavenPublication ) {
      from components.java
      artifact sourcesJar
      artifact groovydocJar
    }
  }
}

artifactoryPublish {
  onlyIf { isMaster }
  mustRunAfter 'build'
  publications 'mavenJava'
}

artifactory {
  contextUrl = "${artifactory_contextUrl}"

  publish {
    repository {
      repoKey = 'oss-snapshot-local'
      username = bintrayUser
      password = bintrayKey
      maven = true
    }
  }
}


bintray {
  user = bintrayUser
  key = bintrayKey

  publications = ['mavenJava']
  publish = true

  pkg {
    repo = 'maven'
    name = 'gradle-readytalk-js'
    licenses = ['MIT']
    desc = 'Gradle plugin for ReadyTalk-style JavaScript projects.'
    websiteUrl = 'http://oss.readytalk.com/gradle-readytalk-js'
    issueTrackerUrl = 'https://github.com/ReadyTalk/gradle-readytalk-js/issues'
    vcsUrl = 'https://github.com/ReadyTalk/gradle-readytalk-js.git'
    labels = ['java', 'gradle', 'groovy', 'node', 'javascript']
    publicDownloadNumbers = true
  }
}
